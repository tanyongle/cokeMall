<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 启用autowire -->
    <context:annotation-config />

    <!-- 启用spring注解扫描并指定包所在的位置 -->    
   <!--  <context:component-scan base-package="com.daoImpl" />
    <context:component-scan base-package="com.security" /> -->
    <context:component-scan base-package="com.service" />
    
    <!-- 扫描测试包 -->
    <!-- <context:component-scan base-package="com.test.Mapper" /> -->

    <!--配置apache dbcp数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://192.168.1.102:3306/CokeMall?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="7" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="20" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="7" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="2" />
	</bean>

    <!-- 使用事务管理器管理数据源 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 启用事务注解，使用@Transactional注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 定义mybatis的sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 以每个类的类名作为该类的别名 -->
        <property name="typeAliasesPackage" value="com.model" />
        <!--configLocation属性指定mybatis的核心配置文件-->
	 	<property name="configLocation" value="classpath:mybatis/configuration.xml"/>
    </bean>
    
    <!-- 模板 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
    	<constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!-- 扫描mybatis的mappers并让他们自动注入 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mapper" />
    </bean>
</beans>
